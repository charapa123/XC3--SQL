CREATE SCHEMA TIL_PORTFOLIO_PROJECTS.CHARALAMBOS_PERSONAL_PROJECT;

CREATE OR REPLACE TABLE MyHTMLData (HTMLContent STRING);
-- This is the Table the webscrape loaded into from Python


CREATE OR REPLACE TABLE XC3_COLONIES AS (

WITH HTML_START AS (
  SELECT REGEXP_REPLACE(HTMLCONTENT, '(\n)', '') AS HTML
  FROM MYHTMLDATA
)
,
HTML_1 AS (
SELECT VALUE AS HTML_SPLIT
FROM HTML_START, 
LATERAL SPLIT_TO_TABLE(HTML, 'Xenoblade Chronicles 3')
)
,
HTML_3 AS(
SELECT VALUE,HTML_SPLIT,REGEXP_SUBSTR(VALUE,'https://img.game8.co/\\d+/\\w+.png/show') AS IMAGES,
LTRIM(CASE
WHEN CONTAINS(REGEXP_SUBSTR(VALUE,'=.\\w+'),'City') THEN 'City'
ELSE REGEXP_SUBSTR(VALUE,'\/>\\w+\\s\\w+') END,'/>') AS COLONY,
CASE 
WHEN LTRIM(RTRIM(ARRAY_TO_STRING(REGEXP_SUBSTR_ALL(HTML_SPLIT,'-\\s\\w+\\s\\w+\\s\\w+'), ''), 'Colonies'),'-') = ' Keves Castle Reg'
THEN 'Keves Castle Region'
ELSE LTRIM(RTRIM(ARRAY_TO_STRING(REGEXP_SUBSTR_ALL(HTML_SPLIT,'-\\s\\w+\\s\\w+\\s\\w+'), ''), 'Colonies'),'-') 
END AS REG
FROM HTML_1,
LATERAL SPLIT_TO_TABLE(HTML_SPLIT,'alt')
)

SELECT CAST(COLONY AS VARCHAR(255)) AS COLONY,IMAGES,
CAST(TRIM(CASE 
WHEN COLONY = 'Agnus Castle' THEN 'Agnus Castle'
WHEN COLONY = 'City' THEN 'City'
WHEN COLONY = 'Nopon Caravans' THEN 'Swordmarch'
ELSE REG END) AS VARCHAR(255)) AS REGION,ROW_NUMBER() OVER (PARTITION BY REGION ORDER  BY COLONY) AS RN
FROM HTML_3
WHERE COLONY IS NOT NULL AND COLONY NOT IN('We hope','Your answers','site improvement')
);



CREATE TABLE XC3_TEST_QUESTS(
RECCOMENDED_LEVEL STRING,
QUEST_NAME STRING,
CHAPTER STRING,
POST_GAME_QUEST STRING,
HOW_TO_ACCEPT_QUEST STRING,
OBJECTIVE STRING,
REWARD STRING
);

CREATE TABLE REGION_MAPS1 (
X VARCHAR(255),
Y VARCHAR(255)
);    

ALTER TABLE REGION_MAPS1 ADD
REGION VARCHAR(255);

DELETE FROM REGION_MAPS1;
-- DELETES ALL ROWS IN THE DATA

-- DROP VIEW TABLEAU_SPATIAL_CHECK;


-- This part correctly creates the region maps!!
CREATE OR REPLACE TABLE XC3_REGIONS AS(

WITH PART_1 AS(
SELECT ST_MAKEPOINT(Y,-X) AS POINTS,REGION,ROW_NUMBER() OVER ( ORDER BY (SELECT NULL)) AS SEQUENCE_NO,X,Y
FROM REGION_MAPS1
)
,
PART_2 AS (
SELECT *,CASE 
WHEN REGION = 'Aetia Region Upper' THEN ROW_NUMBER() OVER (PARTITION BY REGION ORDER BY SEQUENCE_NO)
ELSE ROW_NUMBER() OVER (PARTITION BY REGION ORDER BY SEQUENCE_NO) END AS SEQUENCE_NOM
FROM(
SELECT POINTS,SEQUENCE_NO,ST_MAKEPOINT(Y,-X) AS POINTS_0,X,Y,
CASE 
WHEN REGION = 'Aetia Region' AND ROW_NUMBER() OVER (PARTITION BY REGION ORDER BY SEQUENCE_NO) < 70 THEN 'Aetia Region Upper'
WHEN REGION = 'Keves Castle' THEN 'Keves Castle Region'
ELSE REGION END AS REGION
FROM PART_1
)
)
,
PART_3 AS(
SELECT *
FROM PART_2
WHERE SEQUENCE_NOM = 1
)
,
COLLECT_POINTS AS (
SELECT REGION, ARRAY_AGG(SEQUENCE_NOM) AS SEQ, ST_COLLECT(POINTS) AS COLLECTION_PTS
FROM PART_2
WHERE SEQUENCE_NOM != 1
GROUP BY REGION
)
,
LINES_TABLE AS (
SELECT CP.REGION,CP.SEQ,CP.COLLECTION_PTS,P3.POINTS_0
FROM COLLECT_POINTS AS CP
LEFT JOIN PART_3 AS P3 ON CP.REGION = P3.REGION
)
,
LINES AS (
SELECT REGION,SEQ,ST_MAKELINE(POINTS_0,COLLECTION_PTS) AS REGION_LINES
FROM LINES_TABLE
)
,
POLS AS(
SELECT REGION,SEQ,ST_MAKEPOLYGON(REGION_LINES) AS POLY
FROM LINES
)


SELECT *
FROM LINES
);

CREATE OR REPLACE TABLE XC3_COLONY_LOCATIONS(
X VARCHAR(255),
Y VARCHAR(255),
REGION VARCHAR(255)
);

DROP VIEW REGIONAL_MAPS;

CREATE OR REPLACE TABLE REGIONAL_COLONY_LOCATIONS AS (

WITH PART_1 AS(
SELECT REGION,ROW_NUMBER() OVER ( ORDER BY (SELECT NULL)) AS SEQUENCE_NO,X,Y
FROM XC3_COLONY_LOCATIONS
)

-- SELECT *
-- FROM PART_1;
,
PART_2 AS (
SELECT SEQUENCE_NO,ST_MAKEPOINT(Y,-X) AS POINTS,REGION,X,Y,ROW_NUMBER() OVER (PARTITION BY REGION ORDER BY SEQUENCE_NO) AS SEQUENCE_NOM,
CASE
WHEN SEQUENCE_NOM <= 59 AND REGION = 'Aetia Colonies' THEN 'Colony 9'
WHEN SEQUENCE_NOM >= 60 AND REGION = 'Aetia Colonies' THEN 'Colony Gamma'
WHEN SEQUENCE_NOM <= 152 AND REGION = 'Aetia Region Upper' THEN 'Colony Omega'
WHEN SEQUENCE_NOM >=153 AND REGION = 'Aetia Region Upper' THEN 'Colony 0'
WHEN SEQUENCE_NOM <= 53 AND REGION = 'Fornis Colonies' THEN 'Colony 30'
WHEN SEQUENCE_NOM BETWEEN 54 AND 178 AND REGION = 'Fornis Colonies' THEN 'Colony Iota'
WHEN SEQUENCE_NOM >=179 AND REGION = 'Fornis Colonies' THEN 'Colony 4'
WHEN SEQUENCE_NOM <=93 AND REGION = 'Pentelas Colonies' THEN 'Colony Tau'
WHEN SEQUENCE_NOM BETWEEN 94 AND 127 AND REGION = 'Pentelas Colonies' THEN 'Colony Lambda'
WHEN SEQUENCE_NOM >=128 AND REGION = 'Pentelas Colonies' THEN 'Colony 5'
WHEN SEQUENCE_NOM <=72 AND REGION = 'Skyra Hovering Reefs Colonies' THEN 'Colony 11'
WHEN SEQUENCE_NOM >=73 AND REGION = 'Skyra Hovering Reefs Colonies' THEN 'Keves Castle'
WHEN SEQUENCE_NOM BETWEEN 2 AND 59 AND REGION = 'Cadensia Colonies' THEN 'Colony 15'
WHEN SEQUENCE_NOM BETWEEN 60 AND 287 AND REGION = 'Cadensia Colonies' THEN 'Colony Mu'
WHEN SEQUENCE_NOM >= 287 AND REGION = 'Cadensia Colonies' THEN 'Lost Colony'
WHEN SEQUENCE_NOM >= 1 AND REGION = 'City' THEN 'City'
WHEN SEQUENCE_NOM >= 1 AND REGION = 'Swordmarch' THEN 'Nopon Caravans'
WHEN SEQUENCE_NOM >= 1 AND REGION = 'Agnus Castle' THEN 'Agnus Castle'
ELSE 'COLONY' END AS COLONIES
FROM PART_1
)

,
PART_3 AS(
SELECT *, ROW_NUMBER() OVER (PARTITION BY REGION, COLONIES ORDER BY SEQUENCE_NOM) AS COLONY_SEQ,ST_MAKEPOINT(Y,-X) AS POINTS_0
FROM PART_2
)

-- SELECT *
-- FROM PART_3;
,
PART_4 AS(
SELECT *
FROM PART_3
WHERE COLONY_SEQ = 1 AND COLONIES != 'COLONY'
)

-- SELECT *
-- FROM PART_4;
,
COLLECT_POINTS AS (
SELECT REGION,COLONIES, ARRAY_AGG(COLONY_SEQ) AS SEQ, ST_COLLECT(POINTS) AS COLLECTION_PTS
FROM PART_3
WHERE COLONY_SEQ != 1
GROUP BY REGION,COLONIES
)
,
LINES_TABLE AS (
SELECT CP.REGION,CP.SEQ,CP.COLLECTION_PTS,P4.POINTS_0,CP.COLONIES
FROM COLLECT_POINTS AS CP
LEFT JOIN PART_4 AS P4 ON CP.REGION = P4.REGION AND CP.COLONIES = P4.COLONIES
)
,
LINES AS (
SELECT REGION,COLONIES,ST_MAKELINE(POINTS_0,COLLECTION_PTS) AS COLONY_LINES
FROM LINES_TABLE)

,
POLS AS(
SELECT REGION,ST_MAKEPOLYGON(COLONY_LINES) AS COLONY_POLYGONS,COLONIES
FROM LINES
)

SELECT *
FROM(
SELECT 
CAST(REGEXP_REPLACE(CASE WHEN REGION = 'Skyra Hovering Reefs Colonies' THEN 'Keves Castle Region'
WHEN REGION = 'Other Colonies' THEN 'Swordmarch'
ELSE REGION END,'Colonies','Region') AS VARCHAR(255)) AS REGION,COLONY_LINES,CAST(COLONIES AS VARCHAR(255)) AS COLONIES
FROM LINES)
);
//);
-- SELECT COLONIES,REGION,ST_COLLECT(COLONY_POLYGONS) AS COLONY_SHAPES
-- FROM POLS
-- GROUP BY REGION,COLONIES
);

CREATE OR REPLACE TABLE MyHTMLDataAscention (HTMLContent STRING);
 
SELECT *
FROM MYHTMLDATAASCENTION;

ALTER TABLE MYHTMLDATAASCENTION ADD (
URL VARCHAR(255)
);

SELECT *
FROM XC3_TEST_QUESTS;

CREATE OR REPLACE TABLE XC3_TEST_QUESTS AS (
SELECT CAST(RECCOMENDED_LEVEL AS VARCHAR(255)) AS RECCOMENDED_LEVEL ,CHAPTER,POST_GAME_QUEST,HOW_TO_ACCEPT_QUEST,
CAST(CASE 
WHEN CHAPTER = 'Post-Game' THEN POST_GAME_QUEST
ELSE QUEST_NAME END AS VARCHAR(255)) AS QUEST_NAME
FROM XC3_TEST_QUESTS
);


